version: 2.1

executors:
  docker_node:
    working_directory: ~/repo
    docker:
      - image: cimg/node:14.21.3
  docker_python:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.9

commands:
  restore_node_modules:
    parameters:
      app:
        type: string
    steps:
      - restore_cache:
          key: << parameters.app >>-dependencies-{{ checksum "apps/<< parameters.app >>/package-lock.json" }}
  save_node_modules:
    parameters:
      app:
        type: string
    steps:
      - save_cache:
          paths:
            - apps/<< parameters.app >>/node_modules
          key: << parameters.app >>-dependencies-{{ checksum "apps/<< parameters.app >>/package-lock.json" }}
  prepare:
    parameters:
      app:
        type: string
    steps:
      - restore_node_modules:
          app: << parameters.app >>
      - run:
          name: prepare
          command: |
            cd apps/<< parameters.app >>
            npm ci
      - save_node_modules:
          app: << parameters.app >>
  test:
    parameters:
      app:
        type: string
    steps:
      - checkout
      - restore_node_modules:
          app: << parameters.app >>
      - run:
          name: test
          command: |
            cd apps/<< parameters.app >>
            npm test
  build:
    parameters:
      app:
        type: string
      api_url:
        type: string
      server_api_url:
        type: string
      pop_url:
        type: string
      bucket_url:
        type: string
      env:
        type: string
      sentry:
        type: string
      path:
        type: string
      eurelian:
        type: string
    steps:
      - checkout
      - restore_node_modules:
          app: << parameters.app >>
      - run:
          name: build
          command: |
            cd apps/<< parameters.app >>
            echo "API_URL=<< parameters.api_url >>" > .env
            echo "SERVER_API_URL=<< parameters.server_api_url >>" > .env
            echo "POP_URL=<< parameters.pop_url >>" >> .env
            echo "BUCKET_URL=<< parameters.bucket_url >>" >> .env
            echo "NODE_ENV=<< parameters.env >>" >> .env
            echo "SENTRY_DSN=<< parameters.sentry >>" >> .env
            echo "EURELIAN=<< parameters.eurelian >>" >> .env
            npm run build
      - persist_to_workspace:
          root: ~/repo/apps/<< parameters.app >>
          paths:
            - << parameters.path >>
  deploy_https:
    parameters:
      eb_deploy:
        type: string
      app:
        type: string
      app_name:
        type: string
      domain:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/apps/<< parameters.app >>
      - restore_node_modules:
          app: << parameters.app >>
      - configure_aws_ebcli
      - run:
          name: deploy
          command: |
            cd apps/<< parameters.app >>
            sed -i "s/EMAIL/${LETS_ENCRYPT_EMAIL}/" .platform/hooks/postdeploy/00_get_certificate.sh 
            sed -i "s/DOMAIN/<< parameters.domain >>/" .platform/hooks/postdeploy/00_get_certificate.sh
            sed -i "s/pop_production/<< parameters.app_name >>/" .elasticbeanstalk/config.yml
            mkdir -p .platform/hooks/predeploy
            echo "$MORE_HEADER" | base64 -di > .platform/hooks/predeploy/01_install_more_header.sh
            echo "$PROXY_PRODUCTION" | base64 -di > .platform/nginx/nginx.conf
            sed -i "s/mime.types;/mime.types;\n    server_names_hash_bucket_size  128;/" .platform/nginx/nginx.conf
            eb deploy << parameters.eb_deploy >>
  deploy_api_https:
    parameters:
      eb_deploy:
        type: string
      app_name:
        type: string
      domain:
        type: string
    steps:
      - checkout
      - restore_node_modules:
          app: api
      - configure_aws_ebcli
      - run:
          name: deploy
          command: |
            cd apps/api
            sed -i "s/EMAIL/${LETS_ENCRYPT_EMAIL}/" .platform/hooks/postdeploy/00_get_certificate.sh 
            sed -i "s/DOMAIN/<< parameters.domain >>/" .platform/hooks/postdeploy/00_get_certificate.sh
            sed -i "s/pop_api/<< parameters.app_name >>/" .elasticbeanstalk/config.yml
            mkdir -p .platform/hooks/predeploy
            echo "$MORE_HEADER" | base64 -di > .platform/hooks/predeploy/01_install_more_header.sh
            echo "$PROXY_API" | base64 -di > .platform/nginx/nginx.conf
            sed -i "s/mime.types;/mime.types;\n    server_names_hash_bucket_size  128;/" .platform/nginx/nginx.conf
            eb deploy << parameters.eb_deploy >>
  deploy:
    parameters:
      eb_deploy:
        type: string
      app:
        type: string
      app_name:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/apps/<< parameters.app >>
      - restore_node_modules:
          app: << parameters.app >>
      - configure_aws_ebcli
      - run:
          name: deploy
          command: |
            cd apps/<< parameters.app >>
            rm -rf .ebextensions
            rm -rf .elasticbeanstalk/postdeploy
            rm -rf .platform/hooks/postdeploy
            sed -i "s/pop_production/<< parameters.app_name >>/" .elasticbeanstalk/config.yml
            mkdir -p .platform/hooks/predeploy
            echo "$MORE_HEADER" | base64 -di > .platform/hooks/predeploy/01_install_more_header.sh
            echo "$PROXY_PRODUCTION" | base64 -di > .platform/nginx/nginx.conf
            eb deploy << parameters.eb_deploy >>
  deploy_api:
    parameters:
      eb_deploy:
        type: string
      app_name:
        type: string
    steps:
      - checkout
      - restore_node_modules:
          app: api
      - configure_aws_ebcli
      - run:
          name: deploy
          command: |
            cd apps/api
            rm -rf .ebextensions
            rm -rf .elasticbeanstalk/postdeploy
            rm -rf .platform/hooks/postdeploy
            sed -i "s/pop_api/<< parameters.app_name >>/" .elasticbeanstalk/config.yml
            mkdir -p .platform/hooks/predeploy
            echo "$MORE_HEADER" | base64 -di > .platform/hooks/predeploy/01_install_more_header.sh
            echo "$PROXY_API" | base64 -di > .platform/nginx/nginx.conf
            eb deploy << parameters.eb_deploy >>
  configure_aws_ebcli:
    steps:
      - run: sudo pip install awsebcli
      - run:
          name: AWS credentials
          command: |
            mkdir ~/.aws
            echo "[eb-cli]" > ~/.aws/credentials
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

########
# JOBS #
########
jobs:
  prepare_all:
    executor: docker_node
    steps:
      - checkout
      # Sorry.
      #- run: sudo npm install npm@7.5.6 -g
      - prepare:
          app: api
      - prepare:
          app: production
      - prepare:
          app: diffusion
  ##############
  # TEST JOBS #
  ##############
  test_api:
    docker:
      - image: circleci/node:14.17
      - image: circleci/mongo:4.4
    working_directory: ~/repo
    steps:
      - test:
          app: api
  test_diffusion:
    executor: docker_node
    steps:
      - test:
          app: diffusion
  test_production:
    executor: docker_node
    steps:
      - test:
          app: production
  ##############
  # BUILD JOBS #
  ##############
  build_diffusion_test:
    executor: docker_node
    steps:
      - build:
          app: diffusion
          api_url: https://pop-api-test.eu-west-3.elasticbeanstalk.com
          server_api_url: https://pop-api-test.eu-west-3.elasticbeanstalk.com
          pop_url: https://pop-consultation-test.eu-west-3.elasticbeanstalk.com/
          bucket_url: https://s3.eu-west-3.amazonaws.com/pop-phototeque-test/
          env: test
          sentry: https://16d9797f91fc4db89b69afd1da2a2c74@o1104995.ingest.sentry.io/6312721
          path: ./
          eurelian: uvvw.pop.culture.gouv.fr
  build_diffusion_staging:
    executor: docker_node
    steps:
      - build:
          app: diffusion
          api_url: https://pop-api-staging.eu-west-3.elasticbeanstalk.com
          server_api_url: https://pop-api-staging.eu-west-3.elasticbeanstalk.com
          pop_url: https://pop-consultation-staging.eu-west-3.elasticbeanstalk.com/
          bucket_url: https://s3.eu-west-3.amazonaws.com/pop-phototeque-staging/
          env: staging
          sentry: https://16d9797f91fc4db89b69afd1da2a2c74@o1104995.ingest.sentry.io/6312721
          path: ./
          eurelian: uvvw.pop.culture.gouv.fr
  build_diffusion_prod:
    executor: docker_node
    steps:
      - build:
           app: diffusion
           api_url: https://api.pop.culture.gouv.fr
           server_api_url: http://pop-api.eu-west-3.elasticbeanstalk.com
           pop_url: https://pop.culture.gouv.fr/
           bucket_url: https://s3.eu-west-3.amazonaws.com/pop-phototeque/
           env: production
           sentry: https://16d9797f91fc4db89b69afd1da2a2c74@o1104995.ingest.sentry.io/6312721
           path: ./
           eurelian: uvvw.pop.culture.gouv.fr
  build_production_test:
    executor: docker_node
    steps:
      - build:
          app: production
          api_url: https://pop-api-test.eu-west-3.elasticbeanstalk.com
          server_api_url: https://pop-api-test.eu-west-3.elasticbeanstalk.com
          pop_url: https://pop-consultation-test.eu-west-3.elasticbeanstalk.com
          bucket_url: https://s3.eu-west-3.amazonaws.com/pop-phototeque-test/
          env: test
          sentry: https://6fa9dc5ef69b4e5782696405634b1f98@o1104995.ingest.sentry.io/6313039
          path: build
          eurelian: "null"
  build_production_staging:
    executor: docker_node
    steps:
      - build:
          app: production
          api_url: https://pop-api-staging.eu-west-3.elasticbeanstalk.com
          server_api_url: https://pop-api-staging.eu-west-3.elasticbeanstalk.com
          pop_url: https://pop-consultation-staging.eu-west-3.elasticbeanstalk.com
          bucket_url: https://s3.eu-west-3.amazonaws.com/pop-phototeque-staging/
          env: staging
          sentry: https://6fa9dc5ef69b4e5782696405634b1f98@o1104995.ingest.sentry.io/6313039
          path: build
          eurelian: "null"
  build_production_prod:
    executor: docker_node
    steps:
      - build:
          app: production
          api_url: https://api.pop.culture.gouv.fr
          server_api_url: https://api.pop.culture.gouv.fr
          pop_url: https://pop.culture.gouv.fr/
          bucket_url: https://s3.eu-west-3.amazonaws.com/pop-phototeque/
          env: production
          sentry: https://6fa9dc5ef69b4e5782696405634b1f98@o1104995.ingest.sentry.io/6313039
          path: build
          eurelian: "null"
  ###############
  # DEPLOY JOBS #
  ###############
  deploy_diffusion_test:
    executor: docker_python
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/apps/diffusion
      - restore_node_modules:
          app: diffusion
      - configure_aws_ebcli
      - run:
          name: deploy
          command: |
            cd apps/diffusion
            sed -i "s/EMAIL/${LETS_ENCRYPT_EMAIL}/" .platform/hooks/postdeploy/00_get_certificate.sh 
            sed -i "s/DOMAIN/pop-consultation-test.eu-west-3.elasticbeanstalk.com/" .platform/hooks/postdeploy/00_get_certificate.sh
            sed -i "s/pop_consultation/pop-consultation-staging/" .elasticbeanstalk/config.yml
            mkdir -p .platform/hooks/predeploy
            echo "$MORE_HEADER" | base64 -di > .platform/hooks/predeploy/01_install_more_header.sh
            echo "$PROXY_DIFFUSION" | base64 -di > .platform/nginx/nginx.conf
            sed -i "s/mime.types;/mime.types;\n    server_names_hash_bucket_size  128;/" .platform/nginx/nginx.conf
            eb deploy pop-consultation-test
  deploy_production_test:
    executor: docker_python
    steps:
      - deploy_https:
          app: production
          eb_deploy: pop-production-test
          app_name: pop-production-staging
          domain: pop-production-test.eu-west-3.elasticbeanstalk.com
  deploy_api_test:
    executor: docker_python
    steps:
      - deploy_api_https:
          eb_deploy: pop-api-test
          app_name: pop-api-staging
          domain: pop-api-test.eu-west-3.elasticbeanstalk.com
  deploy_diffusion_staging:
    executor: docker_python
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/apps/diffusion
      - restore_node_modules:
          app: diffusion
      - configure_aws_ebcli
      - run:
          name: deploy
          command: |
            cd apps/diffusion
            sed -i "s/EMAIL/${LETS_ENCRYPT_EMAIL}/" .platform/hooks/postdeploy/00_get_certificate.sh 
            sed -i "s/DOMAIN/pop-consultation-staging.eu-west-3.elasticbeanstalk.com/" .platform/hooks/postdeploy/00_get_certificate.sh
            sed -i "s/pop_consultation/pop-consultation-staging/" .elasticbeanstalk/config.yml
            mkdir -p .platform/hooks/predeploy
            echo "$MORE_HEADER" | base64 -di > .platform/hooks/predeploy/01_install_more_header.sh
            echo "$PROXY_DIFFUSION" | base64 -di > .platform/nginx/nginx.conf
            sed -i "s/mime.types;/mime.types;\n    server_names_hash_bucket_size  128;/" .platform/nginx/nginx.conf
            eb deploy pop-consultation-staging
  deploy_production_staging:
    executor: docker_python
    steps:
      - deploy_https:
          app: production
          eb_deploy: pop-production-staging
          app_name: pop-production-staging
          domain: pop-production-staging.eu-west-3.elasticbeanstalk.com
  deploy_api_staging:
    executor: docker_python
    steps:
      - deploy_api_https:
          eb_deploy: pop-api-staging
          app_name: pop-api-staging
          domain: pop-api-staging.eu-west-3.elasticbeanstalk.com
  deploy_production_prod:
    executor: docker_python
    steps:
      - deploy:
          app: production
          eb_deploy: pop-production
          app_name: pop-production
  deploy_api_prod:
    executor: docker_python
    steps:
      - deploy_api:
          eb_deploy: pop-api
          app_name: pop-api
  deploy_diffusion_prod:
    executor: docker_python
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/apps/diffusion
      - restore_node_modules:
          app: diffusion
      - configure_aws_ebcli
      - run:
          name: deploy
          command: |
            cd apps/diffusion
            rm -rf .ebextensions
            rm -rf .elasticbeanstalk/postdeploy
            rm -rf .platform/hooks/postdeploy
            sed -i "s/pop_consultation/pop-consultation/" .elasticbeanstalk/config.yml
            mkdir -p .platform/hooks/predeploy
            echo "$MORE_HEADER" | base64 -di > .platform/hooks/predeploy/01_install_more_header.sh
            echo "$PROXY_DIFFUSION" | base64 -di > .platform/nginx/nginx.conf
            eb deploy pop-consultation
#############
# WORKFLOWS #
#############
workflows:
  version: 2.1
  ci_cd:
    jobs:
      - prepare_all
      - test_api:
          requires:
            - prepare_all
      - test_production:
          requires:
            - prepare_all
      - test_diffusion:
          requires:
            - prepare_all
      - build_diffusion_test:
          requires:
            - test_diffusion
          filters:
            branches:
              only: 
                - develop
      - build_diffusion_staging:
          requires:
            - test_diffusion
          filters:
            branches:
              only: 
                - staging
                - new-search-system
      - build_diffusion_prod:
          requires:
            - test_diffusion
          filters:
            branches:
              only: master
      - build_production_test:
          requires:
            - test_production
            - prepare_all
          filters:
            branches:
              only: develop
      - build_production_staging:
          requires:
            - test_production
            - prepare_all
          filters:
            branches:
              only: staging
      - build_production_prod:
          requires:
            - test_production
            - prepare_all
          filters:
            branches:
              only: master
      - deploy_api_test:
          requires:
            - test_api
            - prepare_all
          filters:
            branches:
              only: develop
      - deploy_diffusion_test:
          requires:
            - build_diffusion_test
          filters:
            branches:
              only: 
                - develop
      - deploy_production_test:
          requires:
            - build_production_test
          filters:
            branches:
              only: develop
      - deploy_api_staging:
          requires:
            - test_api
            - prepare_all
          filters:
            branches:
              only: staging
      - deploy_diffusion_staging:
          requires:
            - build_diffusion_staging
          filters:
            branches:
              only: 
                - staging
                - new-search-system
      - deploy_production_staging:
          requires:
            - build_production_staging
          filters:
            branches:
              only: staging
      - deploy_api_prod:
          requires:
            - test_api
            - prepare_all
          filters:
            branches:
              only: master
      - deploy_production_prod:
          requires:
            - build_production_prod
          filters:
            branches:
              only: master
      - deploy_diffusion_prod:
          requires:
            - build_diffusion_prod
          filters:
            branches:
              only: master
